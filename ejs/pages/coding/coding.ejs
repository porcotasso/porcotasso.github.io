<% var pageData = { pageTitle: "Code Memoaewrrgaaaw"} %>
<%- include('/Users/porcokafuka/projects/porcotasso.github.io/ejs/_partial/wrapper-head', pageData) %>

<main class="coding">
    <h1>htmlとcssのコーディング</h1>
    <p>メンテナンスと運用を考えたコードでないと、あっと言う間にカオスになってしまうことを前提に作る必要があるわけですが、それがわかった上で何が難しいかというと、サイト自体の内容や機能、大枠さえも、予想を超えてよく変更されていくものなので、未来が見える能力でもない限り「話が違う」ことが起きるのです。家で例えると、間仕切りをとったり、部屋をわけたりくらいまでは建てた後でもリフォームは簡単にできますが、柱を切ったり増築したり、建ぺい率や構造計算は大丈夫なのかとかまでなると、なかなか大変な作業になるわけです。また仕事などでは他のひとと共同作業をするわけで、初見でも理解しやすく、その時の気分や他の人で書き方が変わらないような状態が理想です。よくある問題が、そのスタイルのスコープと、実際どこに使われているかわからず、個別のスタイルを追加してどんどんカオス化していくことです。ひどい場合は、同じクラスが複数書かれていたり、とりあえず今をしのぐ作業をせざるえない状況だったことは予想できるのですが。予想外の影響の可能性は出来るだけ減らしておく考えです。限定させる。smacss htmlとscssの階層を同じにしたBEMがとてもわかりやすい。最近はアジャイル方法で徐々に質を高めていく方法があるので、美しいより変更に強いコードのほうがいいんじゃないかなと思ってます。</p>
    <h2>cssファイルの構成</h2>
    <p>cssの構成と優先順位は<br>
        default ＜ reset ＜ common ＜ each page<br>
        基本こんなイメージです。リセット(ノーマライズ、サニタイズ)CSSはいろいろあるようですが、bootstrap-reboot.cssを参考にサイト用にカスタマイズしています。<br>
        bootstrap.cssはお世話になったときもありますが、結果使わないようになりました。</p>


    <h2>技法</h2>
    <p>BEMを利用しています。aaaaaaacssの階層がとにかくながったらしくなるわけですが、基本cssを確認することはないです。</p>
    
    <h2>フォント</h2>
    <p>aaaaaaa</p>
    <h2>Pタグ</h2>
    <p>line-height letter-space</p>
    <h2>リストタグ</h2>
    <p>aaaaaaa</p>
    <h2>モバイルの左右幅。ガターについて</h2>
    <h2>モバイルファーストについて</h2>
    <h2>ejsついて</h2>
    <h2>class名を書くかどうか</h2>
    <h2>bootstrap</h2>
    <h2>高等言語下等言語</h2>
    <h2>gulpfile.js package.json</h2>
    <h2>ローカルサーバnginx バーチャルホスト</h2>
    <h2>SVG</h2>
    <h2>本</h2>


</main>

<%- include('/Users/porcokafuka/projects/porcotasso.github.io/ejs/_partial/wrapper-foot') %>